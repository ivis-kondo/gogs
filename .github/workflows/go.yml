name: Go
on:
  push:
    branches:
      - master
      - main
      - 'release/**'
      - feature/* # verify GitHub Actions
      - workflow_test
    paths:
      - '**.go'
      - '.golangci.yml'
  pull_request:
    paths:
      - '**.go'
      - '.golangci.yml'
env:
  GOPROXY: "https://proxy.golang.org"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --timeout=30m
        continue-on-error: true

  test:
    name: Test
    strategy:
      matrix:
        go-version: [1.14.x, 1.16.x] # 1.15.x is temporally removed
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install Go-bindata
        run: |
          echo "GOPATH="$GOROOT >> $GITHUB_ENV
          echo "GOBIN="$GOPATH"/bin" >> $GITHUB_ENV
          echo $GOBIN >> $GITHUB_PATH
          go get -u github.com/kevinburke/go-bindata/...
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create *_gen.go files (3 files)
        run: |
          go generate ./internal/assets/conf/conf.go
          go generate ./internal/assets/templates/templates.go
          go generate ./internal/assets/public/public.go
      - name: Run unit tests
        run: go test -v -race -coverprofile=coverage -covermode=atomic ./...
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v1.0.6
        with:
          file: ./coverage
          flags: unittests
      - name: Cache downloaded modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
